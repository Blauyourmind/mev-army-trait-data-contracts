// SPDX-License-Identifier: MIT
pragma solidity 0.8.2;

/// @title MEV Army On-Chain Trait Data
/// @author x0r

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                      //
//                                                                                                                      //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    .............+*****;;*+..........+*****;.*+....;******;.***********+...;******+............*******............    //
//    .............@#####;;#&;........;@####@;+#@....+##&###+;&######&#&#%...;&#####&;..........!#&####?............    //
//    .............@#####;;&#!........!#####*.$&@....+##&###+;&##########%....!######?.........;&#&&##@;............    //
//    .............@#&&#&;;&#&;......;&####@.*##@....+##&&&#+.!??????????*.....$######+........?######+.............    //
//    .............@####&;;###?......?#####*.$##@....+#&@###+..................+######%.......+######?..............    //
//    .............@#&#&&;;###&;....;&####$.*##&@....+######+.!!?????????*......?######+......%#####@;..............    //
//    .............@##&#&;;#&&#?....?#####+.@#&&@....+######+;@&##&&&&###%......;@#####$.....+######+...............    //
//    .............@##&#&;;#####;..;&####%.*####@....+###&&#+;&###@###&##%.......+######*....@#####?................    //
//    .............@#&@#&;;&####%..%#####+.@###&@....+######+.***********+........?#####@;..!#####@;................    //
//    .............@####&;.%#####+;&@###%.;&####@....+######+.....................;&#####!.;&#####*.................    //
//    .............@##&&&;.;&####%%#&&#&;.;&####@....+######+......................*###&#@;*#####?..................    //
//    .............@####&;..?####&@&#&#?..;&####@....+######+.......................$#####!.@###@;..................    //
//    .............@####&;..;&###@&###&;..;&####@....+######+.!!!!!!!!!!?*..........;&#&@#&;*###*...................    //
//    .............@####&;...?###&&###!...;&####@....+######+;&##########%...........!#####?.$#%....................    //
//    .............@####&;...;&##@$$#&;...;&####@....+######+;&#####&##&#%............@#####++@;....................    //
//    .............+*****.....+****+*+.....*****+....;******;.***********+............;!***!;.;.....................    //
//    ..............................................................................................................    //
//    .................;!!!...............+!!!!!!!*+;...........;!!!!;...;!!!!;.........+!!*.....;!!!;..............    //
//    .................$###?..............%###&&&###@+..........;####%...!####!.........;@##?...+&##*...............    //
//    ................?##@##*.............%##*...;!##$..........;##&##+..@#&##!..........;%##%.+&#&+................    //
//    ...............+##%;&#&;............%##?+++*%##?..........;##%@#%.*##?##!............?##$&#@;.................    //
//    ..............;@#&;.*##$............%#######&$*...........;##%!##;@#$*##!.............!###$;..................    //
//    ..............%###&&&###?...........%##!;*$##%;...........;##%;&#@##+*##!..............$##+...................    //
//    .............!##$?????&##+..........%##*...?##&+..........;##%.?###@.*##!..............$##+...................    //
//    ............+&#&;.....+##@;.........%##*....!##&*.........;##%.;&##*.*##*..............$##+...................    //
//    ............;++;.......+++;.........;++;.....;+++..........++;..+++..;++;..............+++;...................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//    ..............................................................................................................    //
//                                                                                                                      //
//                                                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


interface IMEVArmyTraitData {

    struct EditionIndices {
        uint8 binary;
        uint8 legion;
        uint8 light;
        uint8 mouth;
        uint8 helmet;
        uint8 eyes;
        uint8 faces;
    }
    
    /** 
    * @dev Get the raw trait indices for a given tokenId
    * @param tokenId of a MEV Army NFT 
    * @return An array of integers that are indices for the trait arrays stored in this contract
    *   example: [ binary index, legion index, light index, mouth index, helmet index, eyes index, faces index ]
    **/
    function getTraitsIndices(uint256 tokenId) external view returns (EditionIndices memory);


    /** 
    * @dev Get the decoded traits for a given tokenId
    * @param tokenId of a MEV Army NFT 
    * @return An array of strings containing each trait
    **/
    function getTraitsDecoded(uint256 tokenId) external view returns (string [7] memory);


    ////// FUNCTIONS TO GET INDIVIDUAL TRAITS  //////

    function getBinaryDecoded(uint256 tokenId) external view returns (string memory);
    function getBinaryIndex(uint256 tokenId) external view returns (uint256);

    function getLegionDecoded(uint256 tokenId) external view returns (string memory);
    function getLegionIndex(uint256 tokenId) external view returns (uint256);

    function getLightDecoded(uint256 tokenId) external view returns (string memory);
    function getLightIndex(uint256 tokenId) external view returns (uint256);

    function getMouthDecoded(uint256 tokenId) external view returns (string memory);
    function getMouthIndex(uint256 tokenId) external view returns (uint256);

    function getHelmetDecoded(uint256 tokenId) external view returns (string memory);
    function getHelmetIndex(uint256 tokenId) external view returns (uint256);

    function getEyesDecoded(uint256 tokenId) external view returns (string memory);
    function getEyesIndex(uint256 tokenId) external view returns (uint256);

    function getFacesDecoded(uint256 tokenId) external view returns (string memory);
    function getFacesIndex(uint256 tokenId) external view returns (uint256);

}

